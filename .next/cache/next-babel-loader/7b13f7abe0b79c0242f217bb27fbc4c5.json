{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/bibo/delivery/EIP/c3pm/platform/utils/withApollo.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport withApollo from 'next-with-apollo';\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink } from '@apollo/client';\nexport default _c2 = withApollo(_c = function _c(_ref) {\n  var initialState = _ref.initialState,\n      headers = _ref.headers;\n  return new ApolloClient({\n    link: new HttpLink({\n      uri: process.env.GRAPHQL_URL,\n      credentials: 'include',\n      headers: {\n        cookie: headers && headers.cookie\n      }\n    }),\n    cache: new InMemoryCache().restore(initialState || {})\n  });\n}, {\n  // eslint-disable-next-line react/prop-types\n  render: function render(_ref2) {\n    var Page = _ref2.Page,\n        props = _ref2.props;\n    return (// eslint-disable-next-line react/prop-types,react/destructuring-assignment\n      __jsx(ApolloProvider, {\n        client: props.apollo,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 5\n        }\n      }, __jsx(Page, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }\n      })))\n    );\n  }\n});\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$withApollo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/bibo/delivery/EIP/c3pm/platform/utils/withApollo.tsx"],"names":["withApollo","ApolloClient","InMemoryCache","ApolloProvider","HttpLink","initialState","headers","link","uri","process","env","GRAPHQL_URL","credentials","cookie","cache","restore","render","Page","props","apollo"],"mappings":";;;;;;;AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,SACEC,YADF,EACgBC,aADhB,EAC+BC,cAD/B,EAC+CC,QAD/C,QAEO,gBAFP;AAIA,qBAAeJ,UAAU,MAAC;AAAA,MAAGK,YAAH,QAAGA,YAAH;AAAA,MAAiBC,OAAjB,QAAiBA,OAAjB;AAAA,SAA+B,IAAIL,YAAJ,CAAiB;AACxEM,IAAAA,IAAI,EAAE,IAAIH,QAAJ,CAAa;AACjBI,MAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,WADA;AAEjBC,MAAAA,WAAW,EAAE,SAFI;AAGjBN,MAAAA,OAAO,EAAE;AACPO,QAAAA,MAAM,EAAEP,OAAO,IAAIA,OAAO,CAACO;AADpB;AAHQ,KAAb,CADkE;AAQxEC,IAAAA,KAAK,EAAE,IAAIZ,aAAJ,GAAoBa,OAApB,CAA4BV,YAAY,IAAI,EAA5C;AARiE,GAAjB,CAA/B;AAAA,CAAD,EASrB;AACF;AACAW,EAAAA,MAAM,EAAE;AAAA,QAAGC,IAAH,SAAGA,IAAH;AAAA,QAASC,KAAT,SAASA,KAAT;AAAA,WACN;AACA,YAAC,cAAD;AAAgB,QAAA,MAAM,EAAEA,KAAK,CAACC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD,eAAUD,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAFM;AAAA;AAFN,CATqB,CAAzB","sourcesContent":["import withApollo from 'next-with-apollo';\nimport {\n  ApolloClient, InMemoryCache, ApolloProvider, HttpLink,\n} from '@apollo/client';\n\nexport default withApollo(({ initialState, headers }) => new ApolloClient({\n  link: new HttpLink({\n    uri: process.env.GRAPHQL_URL,\n    credentials: 'include',\n    headers: {\n      cookie: headers && headers.cookie,\n    },\n  }),\n  cache: new InMemoryCache().restore(initialState || {}),\n}), {\n  // eslint-disable-next-line react/prop-types\n  render: ({ Page, props }): JSX.Element => (\n    // eslint-disable-next-line react/prop-types,react/destructuring-assignment\n    <ApolloProvider client={props.apollo}>\n      <Page {...props} />\n    </ApolloProvider>\n  ),\n});\n"]},"metadata":{},"sourceType":"module"}