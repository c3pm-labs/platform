{"ast":null,"code":"var _jsxFileName = \"/Users/bibo/delivery/EIP/c3pm/platform/components/pages/Settings/Profile/Email/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport { UPDATE } from 'queries';\nimport { useMutation } from '@apollo/client';\nimport { useRouter } from 'next/router';\nimport { useUser } from 'hooks/user';\nimport InputFied from '../../InputField';\nimport SettingWrapper from '../../SettingWrapper';\nimport UpdateButton from '../../UpdateButton';\nimport { initialValues } from '../utils/UpdateUtils';\nconst useStyles = makeStyles(theme => ({\n  containerInput: {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    [theme.breakpoints.down('xs')]: {\n      flex: 1,\n      width: '100%',\n      marginBottom: theme.spacing(3),\n      marginTop: theme.spacing(3)\n    }\n  },\n  styleForm: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flex: 1,\n    width: '100%',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column'\n    }\n  }\n}));\nconst testSchema = yup.object().shape({\n  email: yup.string().email('Email is invalid').required('Email is required')\n});\n\nfunction Email() {\n  const classes = useStyles();\n  const router = useRouter();\n  const user = useUser({\n    id: String(router.query.params)\n  });\n  const [update] = useMutation(UPDATE);\n  return __jsx(SettingWrapper, {\n    title: \"Email :\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, __jsx(Formik, {\n    validationSchema: testSchema,\n    initialValues: initialValues,\n    onSubmit: values => {\n      update({\n        variables: {\n          id: user.id,\n          // CHANGER PAR LE VRAI ID, PROBLEME DE LOGIN!!!\n          email: values.email\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.containerInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, __jsx(Form, {\n    className: classes.styleForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, __jsx(InputFied, {\n    name: \"email\",\n    label: \"Email :\",\n    value: \"alice.dupont@gmail.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), __jsx(UpdateButton, {\n    description: \"Update your email\",\n    onClick: () => console.log('save'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Email;","map":{"version":3,"sources":["/Users/bibo/delivery/EIP/c3pm/platform/components/pages/Settings/Profile/Email/index.tsx"],"names":["React","makeStyles","Formik","Form","yup","UPDATE","useMutation","useRouter","useUser","InputFied","SettingWrapper","UpdateButton","initialValues","useStyles","theme","containerInput","display","flex","flexDirection","justifyContent","alignItems","breakpoints","down","width","marginBottom","spacing","marginTop","styleForm","testSchema","object","shape","email","string","required","Email","classes","router","user","id","String","query","params","update","values","variables","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  makeStyles,\n} from '@material-ui/core';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport { UPDATE } from 'queries';\nimport { useMutation } from '@apollo/client';\nimport { useRouter } from 'next/router';\nimport { useUser } from 'hooks/user';\n\nimport InputFied from '../../InputField';\nimport SettingWrapper from '../../SettingWrapper';\nimport UpdateButton from '../../UpdateButton';\nimport { initialValues, UpdateUserParams } from '../utils/UpdateUtils';\n\nconst useStyles = makeStyles((theme) => ({\n  containerInput: {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    [theme.breakpoints.down('xs')]: {\n      flex: 1,\n      width: '100%',\n      marginBottom: theme.spacing(3),\n      marginTop: theme.spacing(3),\n    },\n  },\n  styleForm: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flex: 1,\n    width: '100%',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n    },\n  },\n}));\n\nconst testSchema = yup.object().shape({\n  email: yup.string().email('Email is invalid').required('Email is required'),\n});\n\nfunction Email(): JSX.Element {\n  const classes = useStyles();\n  const router = useRouter();\n  const user = useUser({ id: String(router.query.params) });\n  const [update] = useMutation(UPDATE);\n\n  return (\n    <SettingWrapper\n      title=\"Email :\"\n    >\n      <Formik\n        validationSchema={testSchema}\n        initialValues={initialValues}\n        onSubmit={(values: UpdateUserParams): void => {\n          update({\n            variables: {\n              id: user.id, // CHANGER PAR LE VRAI ID, PROBLEME DE LOGIN!!!\n              email: values.email,\n            },\n          });\n        }}\n      >\n        <div className={classes.containerInput}>\n          <Form className={classes.styleForm}>\n            <InputFied name=\"email\" label=\"Email :\" value=\"alice.dupont@gmail.com\" />\n            <UpdateButton description=\"Update your email\" onClick={(): void => (console.log('save'))} />\n          </Form>\n        </div>\n      </Formik>\n    </SettingWrapper>\n  );\n}\n\nexport default Email;\n"]},"metadata":{},"sourceType":"module"}