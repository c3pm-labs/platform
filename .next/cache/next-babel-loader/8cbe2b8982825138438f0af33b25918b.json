{"ast":null,"code":"var _jsxFileName = \"/Users/bibo/delivery/EIP/c3pm/platform/utils/withApollo.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport withApollo from 'next-with-apollo';\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink } from '@apollo/client';\nexport default withApollo(({\n  initialState,\n  headers\n}) => new ApolloClient({\n  link: new HttpLink({\n    uri: process.env.GRAPHQL_URL,\n    credentials: 'include',\n    headers: {\n      cookie: headers && headers.cookie\n    }\n  }),\n  cache: new InMemoryCache().restore(initialState || {})\n}), {\n  // eslint-disable-next-line react/prop-types\n  render: ({\n    Page,\n    props\n  }) => // eslint-disable-next-line react/prop-types,react/destructuring-assignment\n  __jsx(ApolloProvider, {\n    client: props.apollo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(Page, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  })))\n});","map":{"version":3,"sources":["/Users/bibo/delivery/EIP/c3pm/platform/utils/withApollo.tsx"],"names":["withApollo","ApolloClient","InMemoryCache","ApolloProvider","HttpLink","initialState","headers","link","uri","process","env","GRAPHQL_URL","credentials","cookie","cache","restore","render","Page","props","apollo"],"mappings":";;;;;;AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,SACEC,YADF,EACgBC,aADhB,EAC+BC,cAD/B,EAC+CC,QAD/C,QAEO,gBAFP;AAIA,eAAeJ,UAAU,CAAC,CAAC;AAAEK,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAA+B,IAAIL,YAAJ,CAAiB;AACxEM,EAAAA,IAAI,EAAE,IAAIH,QAAJ,CAAa;AACjBI,IAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,WADA;AAEjBC,IAAAA,WAAW,EAAE,SAFI;AAGjBN,IAAAA,OAAO,EAAE;AACPO,MAAAA,MAAM,EAAEP,OAAO,IAAIA,OAAO,CAACO;AADpB;AAHQ,GAAb,CADkE;AAQxEC,EAAAA,KAAK,EAAE,IAAIZ,aAAJ,GAAoBa,OAApB,CAA4BV,YAAY,IAAI,EAA5C;AARiE,CAAjB,CAAhC,EASrB;AACF;AACAW,EAAAA,MAAM,EAAE,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,KACN;AACA,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEA,KAAK,CAACC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,eAAUD,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAJA,CATqB,CAAzB","sourcesContent":["import withApollo from 'next-with-apollo';\nimport {\n  ApolloClient, InMemoryCache, ApolloProvider, HttpLink,\n} from '@apollo/client';\n\nexport default withApollo(({ initialState, headers }) => new ApolloClient({\n  link: new HttpLink({\n    uri: process.env.GRAPHQL_URL,\n    credentials: 'include',\n    headers: {\n      cookie: headers && headers.cookie,\n    },\n  }),\n  cache: new InMemoryCache().restore(initialState || {}),\n}), {\n  // eslint-disable-next-line react/prop-types\n  render: ({ Page, props }): JSX.Element => (\n    // eslint-disable-next-line react/prop-types,react/destructuring-assignment\n    <ApolloProvider client={props.apollo}>\n      <Page {...props} />\n    </ApolloProvider>\n  ),\n});\n"]},"metadata":{},"sourceType":"module"}