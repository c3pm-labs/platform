{"ast":null,"code":"var _jsxFileName = \"/Users/bibo/delivery/EIP/c3pm/platform/components/ButtonLink/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { forwardRef } from 'react';\nimport Link from 'next/link';\nimport Button from 'components/Button';\nconst ButtonLink = forwardRef((_ref, ref) => {\n  let {\n    href,\n    as\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"href\", \"as\"]);\n\n  return __jsx(Link, {\n    href: href,\n    as: as,\n    passHref: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(Button, _extends({\n    ref: ref\n  }, props, {\n    component: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  })));\n});\nexport default ButtonLink;","map":{"version":3,"sources":["/Users/bibo/delivery/EIP/c3pm/platform/components/ButtonLink/index.tsx"],"names":["forwardRef","Link","Button","ButtonLink","ref","href","as","props"],"mappings":";;;;;;;;;;AAAA,SAASA,UAAT,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,MAAP,MAAoC,mBAApC;AAIA,MAAMC,UAAU,GAAGH,UAAU,CAC3B,OAA0CI,GAA1C;AAAA,MAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD;AAAA,MAAgBC,KAAhB;;AAAA,SACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEF,IAAZ;AAAkB,IAAA,EAAE,EAAEC,EAAtB;AAA0B,IAAA,QAAQ,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEF;AAAb,KAAsBG,KAAtB;AAA6B,IAAA,SAAS,EAAC,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAAA,CAD2B,CAA7B;AAQA,eAAeJ,UAAf","sourcesContent":["import { forwardRef, Ref } from 'react';\nimport Link from 'next/link';\n\nimport Button, { ButtonProps } from 'components/Button';\n\nexport type ButtonLinkProps = { href: string; as?: string} & ButtonProps;\n\nconst ButtonLink = forwardRef(\n  ({ href, as, ...props }: ButtonLinkProps, ref: Ref<HTMLButtonElement>) => (\n    <Link href={href} as={as} passHref>\n      <Button ref={ref} {...props} component=\"a\" />\n    </Link>\n  ),\n);\n\nexport default ButtonLink;\n"]},"metadata":{},"sourceType":"module"}