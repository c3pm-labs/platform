{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { useMutation, useQuery } from '@apollo/client';\nimport { useRouter } from 'next/router';\nimport { VIEWER, LOGOUT, REGISTER, LOGIN } from 'queries';\nexport function useViewer() {\n  _s();\n\n  var _useQuery = useQuery(VIEWER),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading || error || !data) {\n    return null;\n  }\n\n  return data.viewer;\n}\n\n_s(useViewer, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\nexport function useLogout() {\n  _s2();\n\n  var router = useRouter();\n\n  var _useMutation = useMutation(LOGOUT, {\n    onError: function onError(e) {\n      var _e$graphQLErrors$, _e$graphQLErrors$$ext;\n\n      if (((_e$graphQLErrors$ = e.graphQLErrors[0]) === null || _e$graphQLErrors$ === void 0 ? void 0 : (_e$graphQLErrors$$ext = _e$graphQLErrors$.extensions) === null || _e$graphQLErrors$$ext === void 0 ? void 0 : _e$graphQLErrors$$ext.code) === 'FORBIDDEN') {\n        // eslint-disable-next-line no-console\n        console.log('User not logged in');\n      }\n    },\n    onCompleted: function onCompleted() {\n      return router.reload();\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      logout = _useMutation2[0];\n\n  return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return logout();\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n}\n\n_s2(useLogout, \"o7ikl2rYPdmziLxDMKzUbUW++jo=\", false, function () {\n  return [useRouter, useMutation];\n});\n\nexport function useRegister() {\n  _s3();\n\n  var router = useRouter();\n\n  var _useMutation3 = useMutation(REGISTER, {\n    onError: function onError(e) {\n      var _e$graphQLErrors$2, _e$graphQLErrors$2$ex;\n\n      if (((_e$graphQLErrors$2 = e.graphQLErrors[0]) === null || _e$graphQLErrors$2 === void 0 ? void 0 : (_e$graphQLErrors$2$ex = _e$graphQLErrors$2.extensions) === null || _e$graphQLErrors$2$ex === void 0 ? void 0 : _e$graphQLErrors$2$ex.code) === 'FORBIDDEN') {\n        // eslint-disable-next-line no-console\n        console.log('User already exists');\n      }\n    },\n    onCompleted: function onCompleted() {\n      router.push('/');\n    },\n    update: function update(cache, _ref2) {\n      var viewer = _ref2.data.register;\n      cache.writeQuery({\n        query: VIEWER,\n        data: {\n          viewer: viewer\n        }\n      });\n    }\n  }),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      register = _useMutation4[0];\n\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(variables) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return register({\n                variables: variables\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n}\n\n_s3(useRegister, \"vtKxkJHqXfWgCsU69O3CafzhWoY=\", false, function () {\n  return [useRouter, useMutation];\n});\n\nexport function useLogin() {\n  _s4();\n\n  var router = useRouter();\n\n  var _useMutation5 = useMutation(LOGIN, {\n    onError: function onError(e) {\n      var _e$graphQLErrors$3, _e$graphQLErrors$3$ex;\n\n      if (((_e$graphQLErrors$3 = e.graphQLErrors[0]) === null || _e$graphQLErrors$3 === void 0 ? void 0 : (_e$graphQLErrors$3$ex = _e$graphQLErrors$3.extensions) === null || _e$graphQLErrors$3$ex === void 0 ? void 0 : _e$graphQLErrors$3$ex.code) === 'FORBIDDEN') {\n        // eslint-disable-next-line no-console\n        console.log('Invalid email or password');\n      }\n    },\n    onCompleted: function onCompleted() {\n      router.push('/');\n    },\n    update: function update(cache, _ref4) {\n      var viewer = _ref4.data.login;\n      cache.writeQuery({\n        query: VIEWER,\n        data: {\n          viewer: viewer\n        }\n      });\n    }\n  }),\n      _useMutation6 = _slicedToArray(_useMutation5, 1),\n      login = _useMutation6[0];\n\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(variables) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return login({\n                variables: variables\n              });\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n}\n\n_s4(useLogin, \"hsfDY2gobfBeEu7q/B99o6EzBJ0=\", false, function () {\n  return [useRouter, useMutation];\n});","map":{"version":3,"sources":["/Users/bibo/delivery/EIP/c3pm/platform/hooks/auth.ts"],"names":["useMutation","useQuery","useRouter","VIEWER","LOGOUT","REGISTER","LOGIN","useViewer","data","loading","error","viewer","useLogout","router","onError","e","graphQLErrors","extensions","code","console","log","onCompleted","reload","logout","useRegister","push","update","cache","register","writeQuery","query","variables","useLogin","login"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from '@apollo/client';\nimport { useRouter } from 'next/router';\nimport { Viewer } from 'types';\nimport {\n  VIEWER, LOGOUT, REGISTER, LOGIN,\n} from 'queries';\n\nimport { LoginParams, RegisterParams } from 'utils/validation';\n\nexport function useViewer(): Viewer | null {\n  const { data, loading, error } = useQuery<{ viewer: Viewer}>(VIEWER);\n\n  if (loading || error || !data) {\n    return null;\n  }\n  return data.viewer;\n}\n\nexport function useLogout(): () => Promise<void> {\n  const router = useRouter();\n  const [logout] = useMutation<{ logout: Viewer}>(LOGOUT, {\n    onError: (e) => {\n      if (e.graphQLErrors[0]?.extensions?.code === 'FORBIDDEN') {\n        // eslint-disable-next-line no-console\n        console.log('User not logged in');\n      }\n    },\n    onCompleted: () => router.reload(),\n  });\n\n  return (async (): Promise<void> => {\n    await logout();\n  });\n}\n\nexport function useRegister(): (variables: RegisterParams) => Promise<void> {\n  const router = useRouter();\n  const [register] = useMutation<{register: Viewer}, RegisterParams>(REGISTER, {\n    onError: (e) => {\n      if (e.graphQLErrors[0]?.extensions?.code === 'FORBIDDEN') {\n        // eslint-disable-next-line no-console\n        console.log('User already exists');\n      }\n    },\n    onCompleted: () => {\n      router.push('/');\n    },\n    update: (cache, { data: { register: viewer } }) => {\n      cache.writeQuery({\n        query: VIEWER,\n        data: { viewer },\n      });\n    },\n  });\n\n  return (async (variables: RegisterParams): Promise<void> => {\n    await register({ variables });\n  });\n}\n\nexport function useLogin(): (variables: LoginParams) => Promise<void> {\n  const router = useRouter();\n  const [login] = useMutation<{ login: Viewer}, LoginParams>(LOGIN, {\n    onError: (e) => {\n      if (e.graphQLErrors[0]?.extensions?.code === 'FORBIDDEN') {\n        // eslint-disable-next-line no-console\n        console.log('Invalid email or password');\n      }\n    },\n    onCompleted: () => {\n      router.push('/');\n    },\n    update: (cache, { data: { login: viewer } }) => {\n      cache.writeQuery({\n        query: VIEWER,\n        data: { viewer },\n      });\n    },\n  });\n\n  return (async (variables: LoginParams): Promise<void> => {\n    await login({ variables });\n  });\n}\n"]},"metadata":{},"sourceType":"module"}