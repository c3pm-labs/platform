{"ast":null,"code":"var _jsxFileName = \"/Users/bibo/delivery/EIP/c3pm/platform/components/pages/profile/Edit/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Form, Formik } from 'formik';\nimport { Box, makeStyles } from '@material-ui/core';\nimport TextInput from '../../../TextInput';\nimport Button from '../../../Button';\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: theme.spacing(3)\n  },\n  description: {\n    display: 'flex',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    fontSize: 16,\n    color: theme.palette.grey[600]\n  },\n  save: {\n    display: 'flex',\n    minWidth: 100\n  },\n  cancel: {\n    display: 'flex',\n    minWidth: 100,\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nconst Edit = ({\n  setIsEdit,\n  user\n}) => {\n  const classes = useStyles();\n  const onSubmit = null;\n  return __jsx(React.Fragment, null, __jsx(Formik, _extends({\n    initialValues: {\n      username: user.username,\n      email: user.email,\n      description: user.description ? user.description : ''\n    }\n  }, onSubmit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), __jsx(Form, {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(TextInput, {\n    name: \"username\",\n    label: \"username\",\n    placeholder: user.username,\n    required: true,\n    fullWidth: true,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), __jsx(TextInput, {\n    name: \"email\",\n    label: \"email\",\n    placeholder: user.email,\n    required: true,\n    fullWidth: true,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), __jsx(TextInput, {\n    name: \"description\",\n    label: \"description\",\n    placeholder: user.description,\n    required: false,\n    fullWidth: true,\n    type: \"text\",\n    multiline: true,\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }))), __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    className: classes.save,\n    color: \"primary\",\n    variant: \"contained\",\n    type: \"submit\",\n    onClick: () => setIsEdit(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Save\"), __jsx(Button, {\n    className: classes.cancel,\n    color: \"error\",\n    variant: \"contained\",\n    type: \"submit\",\n    onClick: () => setIsEdit(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Cancel\")));\n};\n\nexport default Edit;","map":{"version":3,"sources":["/Users/bibo/delivery/EIP/c3pm/platform/components/pages/profile/Edit/index.tsx"],"names":["Form","Formik","Box","makeStyles","TextInput","Button","useStyles","theme","form","display","flexDirection","marginTop","spacing","description","marginBottom","fontSize","color","palette","grey","save","minWidth","cancel","marginLeft","Edit","setIsEdit","user","classes","onSubmit","username","email"],"mappings":"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","sourcesContent":["import { Form, Formik } from 'formik';\nimport { Box, makeStyles } from '@material-ui/core';\nimport { Dispatch, SetStateAction } from 'react';\n\nimport TextInput from '../../../TextInput';\nimport Button from '../../../Button';\nimport { User } from '../../../../types';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: theme.spacing(3),\n  },\n  description: {\n    display: 'flex',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    fontSize: 16,\n    color: theme.palette.grey[600],\n  },\n  save: {\n    display: 'flex',\n    minWidth: 100,\n  },\n  cancel: {\n    display: 'flex',\n    minWidth: 100,\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport interface EditProps {\n  setIsEdit: Dispatch<SetStateAction<boolean>>;\n  user: User;\n}\n\nconst Edit = ({ setIsEdit, user }: EditProps): JSX.Element => {\n  const classes = useStyles();\n  const onSubmit = null;\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          username: user.username,\n          email: user.email,\n          description: user.description ? user.description : '',\n        }}\n        {...onSubmit}\n      >\n        <Form className={classes.form}>\n          <TextInput\n            name=\"username\"\n            label=\"username\"\n            placeholder={user.username}\n            required\n            fullWidth\n            type=\"text\"\n          />\n          <TextInput\n            name=\"email\"\n            label=\"email\"\n            placeholder={user.email}\n            required\n            fullWidth\n            type=\"email\"\n          />\n          <TextInput\n            name=\"description\"\n            label=\"description\"\n            placeholder={user.description}\n            required={false}\n            fullWidth\n            type=\"text\"\n            multiline\n            rows={4}\n          />\n        </Form>\n      </Formik>\n      <Box display=\"flex\" justifyContent=\"center\" flexDirection=\"row\">\n        <Button\n          className={classes.save}\n          color=\"primary\"\n          variant=\"contained\"\n          type=\"submit\"\n          onClick={(): void => setIsEdit(false)}\n        >\n          Save\n        </Button>\n        <Button\n          className={classes.cancel}\n          color=\"error\"\n          variant=\"contained\"\n          type=\"submit\"\n          onClick={(): void => setIsEdit(false)}\n        >\n          Cancel\n        </Button>\n      </Box>\n    </>\n  );\n};\n\nexport default Edit;\n"]},"metadata":{},"sourceType":"module"}