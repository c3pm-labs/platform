{"ast":null,"code":"var _jsxFileName = \"/Users/bibo/delivery/EIP/c3pm/platform/pages/register.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Formik, Form } from 'formik';\nimport Typography from '@material-ui/core/Typography';\nimport { useRegister } from 'hooks/auth';\nimport { makeStyles, useTheme } from '@material-ui/core';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport TextLink from 'components/TextLink';\nimport withApollo from 'utils/withApollo';\nimport TextInput from 'components/TextInput';\nimport PasswordInput from 'components/PasswordInput';\nimport Button from 'components/Button';\nimport { registerSchema } from 'utils/validation';\nimport Head from 'components/Head';\nimport Logo from 'components/Logo';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    flex: 1,\n    height: '100vh',\n    flexDirection: 'column',\n    [theme.breakpoints.up('md')]: {\n      flexDirection: 'row'\n    }\n  },\n  line: {\n    [theme.breakpoints.up('md')]: {\n      width: '1px',\n      height: '100vh',\n      marginRight: '10px',\n      marginLeft: '10px',\n      backgroundColor: theme.palette.grey[400]\n    }\n  },\n  rowContainer: {\n    display: 'flex',\n    width: '50%',\n    height: 'auto',\n    justifyContent: 'center',\n    alignItems: 'center',\n    [theme.breakpoints.down('xs')]: {\n      width: '70%'\n    },\n    [theme.breakpoints.down('sm')]: {\n      paddingTop: '8vw'\n    }\n  },\n  formContainer: {\n    display: 'flex',\n    maxHeight: '70%',\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    [theme.breakpoints.up('md')]: {\n      maxWidth: '50%'\n    }\n  },\n  input: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    minHeight: 150,\n    minWidth: 280,\n    '& .MuiFormControl-root': {\n      marginBottom: theme.spacing(2)\n    }\n  },\n  text: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(5),\n    minWidth: 175,\n    fontSize: 24\n  },\n  login: {\n    display: 'flex',\n    justifyContent: 'center',\n    color: theme.palette.grey[400],\n    marginTop: theme.spacing(4)\n  }\n}));\n\nfunction Register() {\n  const classes = useStyles();\n  const register = useRegister();\n  const initialValues = {\n    username: '',\n    email: '',\n    password: ''\n  };\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up('lg'));\n  const isDesktop = useMediaQuery(theme.breakpoints.up('md'));\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const getSize = () => {\n    if (isMobile) {\n      return null;\n    }\n\n    if (matches) {\n      return 'xl';\n    }\n\n    return 'lg';\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    title: \"c3pm - register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.rowContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, __jsx(Logo, {\n    type: isDesktop ? 'baseline' : 'classic',\n    size: getSize(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: classes.line,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: classes.formContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"Join the team\"), __jsx(Formik, {\n    initialValues: initialValues,\n    validationSchema: registerSchema,\n    onSubmit: values => {\n      register(values);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, __jsx(Form, {\n    noValidate: true,\n    className: classes.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, __jsx(TextInput, {\n    type: \"text\",\n    name: \"username\",\n    label: \"username\",\n    required: true,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }), __jsx(TextInput, {\n    type: \"text\",\n    name: \"email\",\n    label: \"email\",\n    required: true,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }), __jsx(PasswordInput, {\n    name: \"password\",\n    label: \"password\",\n    required: true,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }), __jsx(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, \"Sign up\"))), __jsx(Typography, {\n    variant: \"caption\",\n    className: classes.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, \"Already have an account?\\xA0\", __jsx(TextLink, {\n    href: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, \"Sign in\")))));\n}\n\nexport default withApollo(Register);","map":{"version":3,"sources":["/Users/bibo/delivery/EIP/c3pm/platform/pages/register.tsx"],"names":["Formik","Form","Typography","useRegister","makeStyles","useTheme","useMediaQuery","TextLink","withApollo","TextInput","PasswordInput","Button","registerSchema","Head","Logo","useStyles","theme","container","display","alignItems","flex","height","flexDirection","breakpoints","up","line","width","marginRight","marginLeft","backgroundColor","palette","grey","rowContainer","justifyContent","down","paddingTop","formContainer","maxHeight","maxWidth","input","minHeight","minWidth","marginBottom","spacing","text","marginTop","fontSize","login","color","Register","classes","register","initialValues","username","email","password","matches","isDesktop","isMobile","getSize","values"],"mappings":"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","sourcesContent":["import { Formik, Form } from 'formik';\nimport Typography from '@material-ui/core/Typography';\nimport { useRegister } from 'hooks/auth';\nimport { makeStyles, useTheme } from '@material-ui/core';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport TextLink from 'components/TextLink';\nimport withApollo from 'utils/withApollo';\nimport TextInput from 'components/TextInput';\nimport PasswordInput from 'components/PasswordInput';\nimport Button from 'components/Button';\nimport { RegisterParams, registerSchema } from 'utils/validation';\nimport Head from 'components/Head';\nimport Logo, { LogoProps } from 'components/Logo';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    flex: 1,\n    height: '100vh',\n    flexDirection: 'column',\n    [theme.breakpoints.up('md')]: {\n      flexDirection: 'row',\n    },\n  },\n  line: {\n    [theme.breakpoints.up('md')]: {\n      width: '1px',\n      height: '100vh',\n      marginRight: '10px',\n      marginLeft: '10px',\n      backgroundColor: theme.palette.grey[400],\n    },\n  },\n  rowContainer: {\n    display: 'flex',\n    width: '50%',\n    height: 'auto',\n    justifyContent: 'center',\n    alignItems: 'center',\n    [theme.breakpoints.down('xs')]: {\n      width: '70%',\n    },\n    [theme.breakpoints.down('sm')]: {\n      paddingTop: '8vw',\n    },\n  },\n  formContainer: {\n    display: 'flex',\n    maxHeight: '70%',\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    [theme.breakpoints.up('md')]: {\n      maxWidth: '50%',\n    },\n  },\n  input: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    minHeight: 150,\n    minWidth: 280,\n    '& .MuiFormControl-root': {\n      marginBottom: theme.spacing(2),\n    },\n  },\n  text: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(5),\n    minWidth: 175,\n    fontSize: 24,\n  },\n  login: {\n    display: 'flex',\n    justifyContent: 'center',\n    color: theme.palette.grey[400],\n    marginTop: theme.spacing(4),\n  },\n}));\n\nfunction Register(): JSX.Element {\n  const classes = useStyles();\n  const register = useRegister();\n\n  const initialValues: RegisterParams = { username: '', email: '', password: '' };\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up('lg'));\n  const isDesktop = useMediaQuery(theme.breakpoints.up('md'));\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const getSize = (): LogoProps['size'] => {\n    if (isMobile) {\n      return null;\n    }\n    if (matches) {\n      return 'xl';\n    }\n    return 'lg';\n  };\n\n  return (\n    <>\n      <Head title=\"c3pm - register\" />\n      <div className={classes.container}>\n        <div className={classes.rowContainer}>\n          <Logo type={isDesktop ? 'baseline' : 'classic'} size={getSize()} />\n        </div>\n        <div className={classes.line} />\n        <div className={classes.formContainer}>\n          <Typography\n            variant=\"subtitle1\"\n            className={classes.text}\n          >\n            Join the team\n          </Typography>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={registerSchema}\n            onSubmit={(values: RegisterParams): void => {\n              register(values);\n            }}\n          >\n            <Form noValidate className={classes.input}>\n              <TextInput\n                type=\"text\"\n                name=\"username\"\n                label=\"username\"\n                required\n                fullWidth\n              />\n              <TextInput\n                type=\"text\"\n                name=\"email\"\n                label=\"email\"\n                required\n                fullWidth\n              />\n              <PasswordInput\n                name=\"password\"\n                label=\"password\"\n                required\n                fullWidth\n              />\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                type=\"submit\"\n                fullWidth\n              >\n                Sign up\n              </Button>\n            </Form>\n          </Formik>\n          <Typography\n            variant=\"caption\"\n            className={classes.login}\n          >\n            Already have an account?&nbsp;\n            <TextLink href=\"/login\">Sign in</TextLink>\n          </Typography>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default withApollo(Register);\n"]},"metadata":{},"sourceType":"module"}