{"ast":null,"code":"import { gql } from '@apollo/client';\nexport const USER = gql`\n    query user($id: String) {\n        user(id: $id) {\n            id,\n            username,\n            email,\n            description,\n            packages {\n                name\n                author {\n                    username\n                }\n                versions {\n                    version\n                    publishedAt\n                }\n                latest {\n                    description\n                    publishedAt\n                    version\n                },\n            }\n        }\n    }\n`;\nexport const VIEWER = gql`\n    query {\n        viewer {\n            id\n            email\n            username\n        }\n    }\n`;\nexport const LOGOUT = gql`\n    mutation logout {\n        logout {\n            id\n            username\n            email\n        }\n    }\n`;\nexport const REGISTER = gql`\n    mutation register($username: String!, $email: String!, $password: String!) {\n        register(username: $username, email: $email, password: $password) {\n            id,\n            email,\n            username,\n        }\n    }\n`;\nexport const LOGIN = gql`\n    mutation login($login: String!, $password: String!) {\n        login(login: $login, password: $password) {\n            id,\n            email,\n            username,\n        }\n    }\n`;\nexport const UPDATE = gql`\n    mutation update($id: String!, $newUsername: String, email: String, description: String) {\n        update(id: $id, newUsername: $newUsername, email: $email, description: $description) {\n            id,\n            username,\n            email,\n            description,\n        }\n    }\n`;\nexport const PACKAGE_FROM_VERSION = gql`\n    query packageFromVersion($packageName: String!, $version: String) {\n        version(packageName: $packageName, version: $version) {\n            description\n            version\n            readme\n            package {\n                name\n                author {\n                    username\n                    id\n                }\n                versions {\n                    version\n                    publishedAt\n                }\n                latest {\n                    publishedAt\n                    version\n                }\n            }\n        }\n    }\n`;\nexport const SEARCH = gql`\n    query search($keyword: String!) {\n        search(keyword: $keyword) {\n            name,\n            versions {\n                description,\n                license,\n                readme,\n                publishedAt,\n                version,\n            }\n            author {\n                username,\n            }\n            latest {\n                description,\n                license,\n                readme,\n                publishedAt,\n                version,\n            }\n        }\n    }\n`;","map":{"version":3,"sources":["/Users/bibo/delivery/EIP/c3pm/platform/queries/index.ts"],"names":["gql","USER","VIEWER","LOGOUT","REGISTER","LOGIN","UPDATE","PACKAGE_FROM_VERSION","SEARCH"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AAEA,OAAO,MAAMC,IAAI,GAAGD,GAAI;;;;;;;;;;;;;;;;;;;;;;;;CAAjB;AA0BP,OAAO,MAAME,MAAM,GAAGF,GAAI;;;;;;;;CAAnB;AAUP,OAAO,MAAMG,MAAM,GAAGH,GAAI;;;;;;;;CAAnB;AAUP,OAAO,MAAMI,QAAQ,GAAGJ,GAAI;;;;;;;;CAArB;AAUP,OAAO,MAAMK,KAAK,GAAGL,GAAI;;;;;;;;CAAlB;AAUP,OAAO,MAAMM,MAAM,GAAGN,GAAI;;;;;;;;;CAAnB;AAWP,OAAO,MAAMO,oBAAoB,GAAGP,GAAI;;;;;;;;;;;;;;;;;;;;;;;CAAjC;AAyBP,OAAO,MAAMQ,MAAM,GAAGR,GAAI;;;;;;;;;;;;;;;;;;;;;;;CAAnB","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const USER = gql`\n    query user($id: String) {\n        user(id: $id) {\n            id,\n            username,\n            email,\n            description,\n            packages {\n                name\n                author {\n                    username\n                }\n                versions {\n                    version\n                    publishedAt\n                }\n                latest {\n                    description\n                    publishedAt\n                    version\n                },\n            }\n        }\n    }\n`;\n\nexport const VIEWER = gql`\n    query {\n        viewer {\n            id\n            email\n            username\n        }\n    }\n`;\n\nexport const LOGOUT = gql`\n    mutation logout {\n        logout {\n            id\n            username\n            email\n        }\n    }\n`;\n\nexport const REGISTER = gql`\n    mutation register($username: String!, $email: String!, $password: String!) {\n        register(username: $username, email: $email, password: $password) {\n            id,\n            email,\n            username,\n        }\n    }\n`;\n\nexport const LOGIN = gql`\n    mutation login($login: String!, $password: String!) {\n        login(login: $login, password: $password) {\n            id,\n            email,\n            username,\n        }\n    }\n`;\n\nexport const UPDATE = gql`\n    mutation update($id: String!, $newUsername: String, email: String, description: String) {\n        update(id: $id, newUsername: $newUsername, email: $email, description: $description) {\n            id,\n            username,\n            email,\n            description,\n        }\n    }\n`;\n\nexport const PACKAGE_FROM_VERSION = gql`\n    query packageFromVersion($packageName: String!, $version: String) {\n        version(packageName: $packageName, version: $version) {\n            description\n            version\n            readme\n            package {\n                name\n                author {\n                    username\n                    id\n                }\n                versions {\n                    version\n                    publishedAt\n                }\n                latest {\n                    publishedAt\n                    version\n                }\n            }\n        }\n    }\n`;\n\nexport const SEARCH = gql`\n    query search($keyword: String!) {\n        search(keyword: $keyword) {\n            name,\n            versions {\n                description,\n                license,\n                readme,\n                publishedAt,\n                version,\n            }\n            author {\n                username,\n            }\n            latest {\n                description,\n                license,\n                readme,\n                publishedAt,\n                version,\n            }\n        }\n    }\n`;\n"]},"metadata":{},"sourceType":"module"}