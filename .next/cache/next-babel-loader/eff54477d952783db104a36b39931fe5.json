{"ast":null,"code":"var _jsxFileName = \"/Users/bibo/delivery/EIP/c3pm/platform/components/TextInput/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { useField } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nconst useStyles = makeStyles({\n  root: {\n    margin: 0\n  }\n});\n\nconst TextInput = (_ref) => {\n  let {\n    disableHelperText = false\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"disableHelperText\"]);\n\n  const [field, meta] = useField(props);\n  const classes = useStyles();\n  const {\n    multiline,\n    rows\n  } = props;\n  let helperText = ' ';\n\n  if (disableHelperText) {\n    helperText = '';\n  } else if (!!meta.error && meta.touched) {\n    helperText = meta.error;\n  }\n\n  return __jsx(TextField, _extends({\n    variant: \"outlined\",\n    helperText: helperText,\n    error: !!(meta.error && meta.touched),\n    size: \"small\",\n    multiline: multiline,\n    rows: rows,\n    FormHelperTextProps: {\n      classes: {\n        root: classes.root\n      }\n    }\n  }, field, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default TextInput;","map":{"version":3,"sources":["/Users/bibo/delivery/EIP/c3pm/platform/components/TextInput/index.tsx"],"names":["React","useField","TextField","makeStyles","useStyles","root","margin","TextInput","disableHelperText","props","field","meta","classes","multiline","rows","helperText","error","touched"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAC;AAC3BE,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE;AADJ;AADqB,CAAD,CAA5B;;AAqBA,MAAMC,SAAS,GAAG,UAA0E;AAAA,MAAzE;AAAEC,IAAAA,iBAAiB,GAAG;AAAtB,GAAyE;AAAA,MAAzCC,KAAyC;;AAC1F,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBV,QAAQ,CAACQ,KAAD,CAA9B;AACA,QAAMG,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM;AAAES,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAsBL,KAA5B;AACA,MAAIM,UAAU,GAAG,GAAjB;;AACA,MAAIP,iBAAJ,EAAuB;AACrBO,IAAAA,UAAU,GAAG,EAAb;AACD,GAFD,MAEO,IAAI,CAAC,CAACJ,IAAI,CAACK,KAAP,IAAgBL,IAAI,CAACM,OAAzB,EAAkC;AACvCF,IAAAA,UAAU,GAAGJ,IAAI,CAACK,KAAlB;AACD;;AAED,SACE,MAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,UAAU,EAAED,UAFd;AAGE,IAAA,KAAK,EAAE,CAAC,EAAEJ,IAAI,CAACK,KAAL,IAAcL,IAAI,CAACM,OAArB,CAHV;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,SAAS,EAAEJ,SALb;AAME,IAAA,IAAI,EAAEC,IANR;AAOE,IAAA,mBAAmB,EAAE;AAAEF,MAAAA,OAAO,EAAE;AAAEP,QAAAA,IAAI,EAAEO,OAAO,CAACP;AAAhB;AAAX;AAPvB,KAQMK,KARN,EASMD,KATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAaD,CAxBD;;AA0BA,eAAeF,SAAf","sourcesContent":["import React from 'react';\nimport { useField } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles({\n  root: {\n    margin: 0,\n  },\n});\n\nexport interface TextInputProps {\n  label?: string;\n  required?: boolean;\n  type?: string;\n  placeholder?: string;\n  name: string;\n  multiline?: boolean;\n  rows?: number;\n  fullWidth?: boolean;\n  disableHelperText?: boolean;\n  InputProps?: {\n    endAdornment: JSX.Element;\n  };\n}\n\nconst TextInput = ({ disableHelperText = false, ...props }: TextInputProps): JSX.Element => {\n  const [field, meta] = useField(props);\n  const classes = useStyles();\n  const { multiline, rows } = props;\n  let helperText = ' ';\n  if (disableHelperText) {\n    helperText = '';\n  } else if (!!meta.error && meta.touched) {\n    helperText = meta.error;\n  }\n\n  return (\n    <TextField\n      variant=\"outlined\"\n      helperText={helperText}\n      error={!!(meta.error && meta.touched)}\n      size=\"small\"\n      multiline={multiline}\n      rows={rows}\n      FormHelperTextProps={{ classes: { root: classes.root } }}\n      {...field}\n      {...props}\n    />\n  );\n};\n\nexport default TextInput;\n"]},"metadata":{},"sourceType":"module"}