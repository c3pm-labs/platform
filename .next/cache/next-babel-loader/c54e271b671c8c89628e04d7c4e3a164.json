{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n    query search($keyword: String!) {\\n        search(keyword: $keyword) {\\n            name,\\n            versions {\\n                description,\\n                license,\\n                readme,\\n                publishedAt,\\n                version,\\n            }\\n            author {\\n                username,\\n            }\\n            latest {\\n                description,\\n                license,\\n                readme,\\n                publishedAt,\\n                version,\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n    query packageFromVersion($packageName: String!, $version: String) {\\n        version(packageName: $packageName, version: $version) {\\n            description\\n            version\\n            readme\\n            package {\\n                name\\n                author {\\n                    username\\n                    id\\n                }\\n                versions {\\n                    version\\n                    publishedAt\\n                }\\n                latest {\\n                    publishedAt\\n                    version\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation update($id: String!, $username: String, $email: String, $description: String, $password: String) {\\n        update(id: $id, username: $username, email: $email, description: $description, password: $password) {\\n            id,\\n            username,\\n            email,\\n            description,\\n            password,\\n        }\\n    }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation login($login: String!, $password: String!) {\\n        login(login: $login, password: $password) {\\n            id,\\n            email,\\n            username,\\n        }\\n    }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation register($username: String!, $email: String!, $password: String!) {\\n        register(username: $username, email: $email, password: $password) {\\n            id,\\n            email,\\n            username,\\n        }\\n    }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation logout {\\n        logout {\\n            id\\n            username\\n            email\\n        }\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n        viewer {\\n            id\\n            email\\n            username\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query user($id: String) {\\n        user(id: $id) {\\n            id,\\n            username,\\n            email,\\n            description,\\n            packages {\\n                name\\n                author {\\n                    username\\n                }\\n                versions {\\n                    version\\n                    publishedAt\\n                }\\n                latest {\\n                    description\\n                    publishedAt\\n                    version\\n                },\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from '@apollo/client';\nexport var USER = gql(_templateObject());\nexport var VIEWER = gql(_templateObject2());\nexport var LOGOUT = gql(_templateObject3());\nexport var REGISTER = gql(_templateObject4());\nexport var LOGIN = gql(_templateObject5());\nexport var UPDATE = gql(_templateObject6());\nexport var PACKAGE_FROM_VERSION = gql(_templateObject7());\nexport var SEARCH = gql(_templateObject8());","map":{"version":3,"sources":["/Users/bibo/delivery/EIP/c3pm/platform/queries/index.ts"],"names":["gql","USER","VIEWER","LOGOUT","REGISTER","LOGIN","UPDATE","PACKAGE_FROM_VERSION","SEARCH"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,gBAApB;AAEA,OAAO,IAAMC,IAAI,GAAGD,GAAH,mBAAV;AA0BP,OAAO,IAAME,MAAM,GAAGF,GAAH,oBAAZ;AAUP,OAAO,IAAMG,MAAM,GAAGH,GAAH,oBAAZ;AAUP,OAAO,IAAMI,QAAQ,GAAGJ,GAAH,oBAAd;AAUP,OAAO,IAAMK,KAAK,GAAGL,GAAH,oBAAX;AAUP,OAAO,IAAMM,MAAM,GAAGN,GAAH,oBAAZ;AAYP,OAAO,IAAMO,oBAAoB,GAAGP,GAAH,oBAA1B;AAyBP,OAAO,IAAMQ,MAAM,GAAGR,GAAH,oBAAZ","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const USER = gql`\n    query user($id: String) {\n        user(id: $id) {\n            id,\n            username,\n            email,\n            description,\n            packages {\n                name\n                author {\n                    username\n                }\n                versions {\n                    version\n                    publishedAt\n                }\n                latest {\n                    description\n                    publishedAt\n                    version\n                },\n            }\n        }\n    }\n`;\n\nexport const VIEWER = gql`\n    query {\n        viewer {\n            id\n            email\n            username\n        }\n    }\n`;\n\nexport const LOGOUT = gql`\n    mutation logout {\n        logout {\n            id\n            username\n            email\n        }\n    }\n`;\n\nexport const REGISTER = gql`\n    mutation register($username: String!, $email: String!, $password: String!) {\n        register(username: $username, email: $email, password: $password) {\n            id,\n            email,\n            username,\n        }\n    }\n`;\n\nexport const LOGIN = gql`\n    mutation login($login: String!, $password: String!) {\n        login(login: $login, password: $password) {\n            id,\n            email,\n            username,\n        }\n    }\n`;\n\nexport const UPDATE = gql`\n    mutation update($id: String!, $username: String, $email: String, $description: String, $password: String) {\n        update(id: $id, username: $username, email: $email, description: $description, password: $password) {\n            id,\n            username,\n            email,\n            description,\n            password,\n        }\n    }\n`;\n\nexport const PACKAGE_FROM_VERSION = gql`\n    query packageFromVersion($packageName: String!, $version: String) {\n        version(packageName: $packageName, version: $version) {\n            description\n            version\n            readme\n            package {\n                name\n                author {\n                    username\n                    id\n                }\n                versions {\n                    version\n                    publishedAt\n                }\n                latest {\n                    publishedAt\n                    version\n                }\n            }\n        }\n    }\n`;\n\nexport const SEARCH = gql`\n    query search($keyword: String!) {\n        search(keyword: $keyword) {\n            name,\n            versions {\n                description,\n                license,\n                readme,\n                publishedAt,\n                version,\n            }\n            author {\n                username,\n            }\n            latest {\n                description,\n                license,\n                readme,\n                publishedAt,\n                version,\n            }\n        }\n    }\n`;\n"]},"metadata":{},"sourceType":"module"}