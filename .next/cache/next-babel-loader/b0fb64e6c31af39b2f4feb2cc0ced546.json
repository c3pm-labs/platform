{"ast":null,"code":"var _jsxFileName = \"/Users/bibo/delivery/EIP/c3pm/platform/components/Avatar/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Typography, Avatar as MuiAvatar } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nfunction hashCode(str) {\n  var hash = 0;\n\n  for (var i = 0; i < str.length; i += 1) {\n    // eslint-disable-next-line no-bitwise\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  return hash;\n}\n\nfunction intToRGB(i) {\n  // eslint-disable-next-line no-bitwise\n  var c = (i & 0x00FFFFFF).toString(16).toUpperCase();\n  return '00000'.substring(0, 6 - c.length) + c;\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    container: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    picture: {\n      marginRight: theme.spacing(1),\n      backgroundColor: function backgroundColor(props) {\n        return \"#\".concat(intToRGB(hashCode(props.name)));\n      },\n      opacity: 0.8\n    },\n    name: {\n      fontSize: 16\n    }\n  });\n});\n\nfunction Avatar(props) {\n  _s();\n\n  var _user$username, _user$username2;\n\n  var user = props.user,\n      classes = props.classes,\n      _props$withName = props.withName,\n      withName = _props$withName === void 0 ? true : _props$withName,\n      stylePicture = props.stylePicture;\n  var styles = useStyles({\n    name: (_user$username = user === null || user === void 0 ? void 0 : user.username) !== null && _user$username !== void 0 ? _user$username : ''\n  });\n  var containerClass = clsx(styles.container, classes === null || classes === void 0 ? void 0 : classes.container);\n  var pictureClass = clsx(styles.picture, classes === null || classes === void 0 ? void 0 : classes.picture, stylePicture);\n  var nameClass = clsx(styles.name, classes === null || classes === void 0 ? void 0 : classes.name);\n  return __jsx(\"div\", {\n    className: containerClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, __jsx(MuiAvatar, {\n    alt: \"author\",\n    src: \"\",\n    className: pictureClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, user === null || user === void 0 ? void 0 : (_user$username2 = user.username) === null || _user$username2 === void 0 ? void 0 : _user$username2[0].toUpperCase()), withName && __jsx(Typography, {\n    className: nameClass,\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, user === null || user === void 0 ? void 0 : user.username));\n}\n\n_s(Avatar, \"3bjLmUB54uhXRX+frDMowQzU8P8=\", false, function () {\n  return [useStyles];\n});\n\n_c = Avatar;\nexport default Avatar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Avatar\");","map":{"version":3,"sources":["/Users/bibo/delivery/EIP/c3pm/platform/components/Avatar/index.tsx"],"names":["Typography","Avatar","MuiAvatar","createStyles","makeStyles","clsx","hashCode","str","hash","i","length","charCodeAt","intToRGB","c","toString","toUpperCase","substring","useStyles","theme","container","display","alignItems","justifyContent","picture","marginRight","spacing","backgroundColor","props","name","opacity","fontSize","user","classes","withName","stylePicture","styles","username","containerClass","pictureClass","nameClass"],"mappings":"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","sourcesContent":["import { Typography, Avatar as MuiAvatar } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { User } from '../../types';\n\nfunction hashCode(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i += 1) {\n    // eslint-disable-next-line no-bitwise\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  return hash;\n}\n\nfunction intToRGB(i) {\n  // eslint-disable-next-line no-bitwise\n  const c = (i & 0x00FFFFFF)\n    .toString(16)\n    .toUpperCase();\n\n  return '00000'.substring(0, 6 - c.length) + c;\n}\n\ninterface StyledProps {\n  name: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  picture: {\n    marginRight: theme.spacing(1),\n    backgroundColor: (props: StyledProps) => `#${intToRGB(hashCode(props.name))}`,\n    opacity: 0.8,\n  },\n  name: {\n    fontSize: 16,\n  },\n}));\n\nexport interface AvatarProps {\n  classes?: {\n    container?: string,\n    picture?: string,\n    name?: string,\n  };\n  stylePicture?: string,\n  user: User;\n  withName?: boolean\n}\n\nfunction Avatar(props: AvatarProps): JSX.Element {\n  const {\n    user,\n    classes,\n    withName = true,\n    stylePicture,\n  } = props;\n  const styles = useStyles({ name: user?.username ?? '' });\n  const containerClass = clsx(styles.container, classes?.container);\n  const pictureClass = clsx(styles.picture, classes?.picture, stylePicture);\n  const nameClass = clsx(styles.name, classes?.name);\n\n  return (\n    <div className={containerClass}>\n      <MuiAvatar\n        alt=\"author\"\n        src=\"\"\n        className={pictureClass}\n      >\n        {user?.username?.[0].toUpperCase()}\n      </MuiAvatar>\n      { withName && <Typography className={nameClass} variant=\"body1\">{user?.username}</Typography> }\n    </div>\n  );\n}\n\nexport default Avatar;\n"]},"metadata":{},"sourceType":"module"}