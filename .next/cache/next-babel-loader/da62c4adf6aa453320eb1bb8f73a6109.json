{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/bibo/delivery/EIP/c3pm/platform/components/pages/Settings/Profile/Name/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { Formik, Form } from 'formik';\nimport { UPDATE } from 'queries';\nimport { useMutation } from '@apollo/client'; // import { useRouter } from 'next/router';\n// import { useUser } from 'hooks/user';\n\nimport InputFied from '../../InputField';\nimport SettingWrapper from '../../SettingWrapper';\nimport UpdateButton from '../../UpdateButton';\nimport { initialValues } from '../utils/UpdateUtils';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    containerInput: _defineProperty({\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      alignItems: 'flex-start',\n      minHeight: '100px',\n      height: '100px',\n      maxHeight: '100px'\n    }, theme.breakpoints.down('xs'), {\n      flex: 1,\n      width: '100%',\n      maxHeight: '300px'\n    }),\n    styleForm: _defineProperty({\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      flex: 1,\n      width: '100%'\n    }, theme.breakpoints.down('xs'), {\n      flexDirection: 'column'\n    }),\n    textButton: {\n      color: 'white',\n      fontWeight: 500,\n      textTransform: 'capitalize'\n    },\n    customButton: {\n      maxHeight: '36px'\n    }\n  };\n});\n\nfunction Name() {\n  _s();\n\n  var classes = useStyles(); // const router = useRouter();\n  // const user = useUser({ id: String(router.query.params) });\n\n  var _useMutation = useMutation(UPDATE),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      update = _useMutation2[0];\n\n  return __jsx(SettingWrapper, {\n    title: \"Name :\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(Formik, {\n    initialValues: initialValues,\n    onSubmit: function onSubmit(e) {\n      return console.log('username', e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.containerInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(Form, {\n    className: classes.styleForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, __jsx(InputFied, {\n    name: \"username\",\n    label: \"Username :\",\n    value: \"Alice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), __jsx(UpdateButton, {\n    description: \"Update your name\",\n    onClick: function onClick() {\n      return console.log('save');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  })))));\n}\n\n_s(Name, \"ueiHs9uklEDAbeumgf9LVfXeviI=\", false, function () {\n  return [useStyles, useMutation];\n});\n\n_c = Name;\nexport default Name;\n\nvar _c;\n\n$RefreshReg$(_c, \"Name\");","map":{"version":3,"sources":["/Users/bibo/delivery/EIP/c3pm/platform/components/pages/Settings/Profile/Name/index.tsx"],"names":["React","makeStyles","Formik","Form","UPDATE","useMutation","InputFied","SettingWrapper","UpdateButton","initialValues","useStyles","theme","containerInput","display","flex","flexDirection","justifyContent","alignItems","minHeight","height","maxHeight","breakpoints","down","width","styleForm","textButton","color","fontWeight","textTransform","customButton","Name","classes","update","e","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  makeStyles,\n} from '@material-ui/core';\nimport { Formik, Form } from 'formik';\nimport { UPDATE } from 'queries';\nimport { useMutation } from '@apollo/client';\n// import { useRouter } from 'next/router';\n// import { useUser } from 'hooks/user';\n\nimport InputFied from '../../InputField';\nimport SettingWrapper from '../../SettingWrapper';\nimport UpdateButton from '../../UpdateButton';\nimport { initialValues, UpdateUserParams } from '../utils/UpdateUtils';\n\nconst useStyles = makeStyles((theme) => ({\n  containerInput: {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    minHeight: '100px',\n    height: '100px',\n    maxHeight: '100px',\n    [theme.breakpoints.down('xs')]: {\n      flex: 1,\n      width: '100%',\n      maxHeight: '300px',\n    },\n  },\n  styleForm: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flex: 1,\n    width: '100%',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n    },\n  },\n  textButton: {\n    color: 'white',\n    fontWeight: 500,\n    textTransform: 'capitalize',\n  },\n  customButton: {\n    maxHeight: '36px',\n  },\n}));\n\nfunction Name(): JSX.Element {\n  const classes = useStyles();\n  // const router = useRouter();\n  // const user = useUser({ id: String(router.query.params) });\n  const [update] = useMutation(UPDATE);\n\n  return (\n    <SettingWrapper\n      title=\"Name :\"\n    >\n      <Formik\n        initialValues={initialValues}\n        onSubmit={(e): void => (console.log('username', e))}\n      >\n        <div className={classes.containerInput}>\n          <Form className={classes.styleForm}>\n            <InputFied name=\"username\" label=\"Username :\" value=\"Alice\" />\n            <UpdateButton description=\"Update your name\" onClick={(): void => (console.log('save'))} />\n          </Form>\n        </div>\n      </Formik>\n    </SettingWrapper>\n  );\n}\n\nexport default Name;\n"]},"metadata":{},"sourceType":"module"}