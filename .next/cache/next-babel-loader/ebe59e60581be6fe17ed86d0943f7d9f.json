{"ast":null,"code":"var _jsxFileName = \"/Users/bibo/delivery/EIP/c3pm/platform/components/pages/Settings/Profile/Biography/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport { UPDATE, USER } from 'queries';\nimport { useMutation } from '@apollo/client';\nimport { useRouter } from 'next/router';\nimport InputFied from '../../InputField';\nimport SettingWrapper from '../../SettingWrapper';\nimport UpdateButton from '../../UpdateButton';\nconst useStyles = makeStyles(theme => ({\n  containerInput: {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    minHeight: '100px',\n    height: '100px',\n    maxHeight: '100px',\n    [theme.breakpoints.down('xs')]: {\n      flex: 1,\n      width: '100%',\n      maxHeight: '300px',\n      marginBottom: theme.spacing(1)\n    }\n  },\n  styleForm: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flex: 1,\n    width: '100%',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column'\n    }\n  }\n}));\nconst initialValues = {\n  newUsername: '',\n  email: '',\n  description: ''\n};\nconst testSchema = yup.object().shape({});\n\nfunction useUpdate({\n  id\n}) {\n  const [update] = useMutation(UPDATE, {\n    variables: {\n      id\n    },\n    onCompleted: () => {\n      console.log('success');\n    },\n    update: (cache, {\n      data: {\n        update: user\n      }\n    }) => {\n      cache.writeQuery({\n        query: USER,\n        data: {\n          user\n        }\n      });\n    }\n  });\n  return async variables => {\n    await update({\n      variables\n    });\n  };\n}\n\nfunction Biography() {\n  const classes = useStyles();\n  const router = useRouter();\n  const update = useUpdate({\n    id: String(router.query.params)\n  });\n  return __jsx(SettingWrapper, {\n    title: \"Description :\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, __jsx(Formik, {\n    validationSchema: testSchema,\n    initialValues: initialValues,\n    onSubmit: values => {\n      console.log('description', values);\n      update(values);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.containerInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, __jsx(Form, {\n    className: classes.styleForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, __jsx(InputFied, {\n    name: \"descritpion\",\n    label: \"Description :\",\n    value: \"Software developer\",\n    rows: 4,\n    multiline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), __jsx(UpdateButton, {\n    description: \"Update your description\",\n    onClick: () => console.log('save'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Biography;","map":{"version":3,"sources":["/Users/bibo/delivery/EIP/c3pm/platform/components/pages/Settings/Profile/Biography/index.tsx"],"names":["React","makeStyles","Formik","Form","yup","UPDATE","USER","useMutation","useRouter","InputFied","SettingWrapper","UpdateButton","useStyles","theme","containerInput","display","flex","flexDirection","justifyContent","alignItems","minHeight","height","maxHeight","breakpoints","down","width","marginBottom","spacing","styleForm","initialValues","newUsername","email","description","testSchema","object","shape","useUpdate","id","update","variables","onCompleted","console","log","cache","data","user","writeQuery","query","Biography","classes","router","String","params","values"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,UADF,QAEO,mBAFP;AAGA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,SAA7B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAGA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AAEA,MAAMC,SAAS,GAAGX,UAAU,CAAEY,KAAD,KAAY;AACvCC,EAAAA,cAAc,EAAE;AACdC,IAAAA,OAAO,EAAE,MADK;AAEdC,IAAAA,IAAI,EAAE,CAFQ;AAGdC,IAAAA,aAAa,EAAE,QAHD;AAIdC,IAAAA,cAAc,EAAE,eAJF;AAKdC,IAAAA,UAAU,EAAE,YALE;AAMdC,IAAAA,SAAS,EAAE,OANG;AAOdC,IAAAA,MAAM,EAAE,OAPM;AAQdC,IAAAA,SAAS,EAAE,OARG;AASd,KAACT,KAAK,CAACU,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BR,MAAAA,IAAI,EAAE,CADwB;AAE9BS,MAAAA,KAAK,EAAE,MAFuB;AAG9BH,MAAAA,SAAS,EAAE,OAHmB;AAI9BI,MAAAA,YAAY,EAAEb,KAAK,CAACc,OAAN,CAAc,CAAd;AAJgB;AATlB,GADuB;AAiBvCC,EAAAA,SAAS,EAAE;AACTb,IAAAA,OAAO,EAAE,MADA;AAETG,IAAAA,cAAc,EAAE,eAFP;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITH,IAAAA,IAAI,EAAE,CAJG;AAKTS,IAAAA,KAAK,EAAE,MALE;AAMT,KAACZ,KAAK,CAACU,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BP,MAAAA,aAAa,EAAE;AADe;AANvB;AAjB4B,CAAZ,CAAD,CAA5B;AAmCA,MAAMY,aAA+B,GAAG;AACtCC,EAAAA,WAAW,EAAE,EADyB;AACrBC,EAAAA,KAAK,EAAE,EADc;AACVC,EAAAA,WAAW,EAAE;AADH,CAAxC;AAIA,MAAMC,UAAU,GAAG7B,GAAG,CAAC8B,MAAJ,GAAaC,KAAb,CAAmB,EAAnB,CAAnB;;AAGA,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAyF;AACvF,QAAM,CAACC,MAAD,IAAW/B,WAAW,CAAmBF,MAAnB,EAA2B;AACrDkC,IAAAA,SAAS,EAAE;AAAEF,MAAAA;AAAF,KAD0C;AAErDG,IAAAA,WAAW,EAAE,MAAM;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,KAJoD;AAKrDJ,IAAAA,MAAM,EAAE,CAACK,KAAD,EAAQ;AAAEC,MAAAA,IAAI,EAAE;AAAEN,QAAAA,MAAM,EAAEO;AAAV;AAAR,KAAR,KAAuC;AAC7CF,MAAAA,KAAK,CAACG,UAAN,CAAiB;AACfC,QAAAA,KAAK,EAAEzC,IADQ;AAEfsC,QAAAA,IAAI,EAAE;AAAEC,UAAAA;AAAF;AAFS,OAAjB;AAID;AAVoD,GAA3B,CAA5B;AAaA,SAAQ,MAAON,SAAP,IAAsD;AAC5D,UAAMD,MAAM,CAAC;AAAEC,MAAAA;AAAF,KAAD,CAAZ;AACD,GAFD;AAGD;;AAED,SAASS,SAAT,GAAkC;AAChC,QAAMC,OAAO,GAAGrC,SAAS,EAAzB;AACA,QAAMsC,MAAM,GAAG1C,SAAS,EAAxB;AACA,QAAM8B,MAAM,GAAGF,SAAS,CAAE;AAAEC,IAAAA,EAAE,EAAEc,MAAM,CAACD,MAAM,CAACH,KAAP,CAAaK,MAAd;AAAZ,GAAF,CAAxB;AAEA,SACE,MAAC,cAAD;AACE,IAAA,KAAK,EAAC,eADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,MAAC,MAAD;AACE,IAAA,gBAAgB,EAAEnB,UADpB;AAEE,IAAA,aAAa,EAAEJ,aAFjB;AAGE,IAAA,QAAQ,EAAGwB,MAAD,IAAoC;AAC5CZ,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BW,MAA3B;AACAf,MAAAA,MAAM,CAACe,MAAD,CAAN;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACnC,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAEmC,OAAO,CAACrB,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,KAAK,EAAC,eAFR;AAGE,IAAA,KAAK,EAAC,oBAHR;AAIE,IAAA,IAAI,EAAE,CAJR;AAKE,IAAA,SAAS,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,MAAC,YAAD;AAAc,IAAA,WAAW,EAAC,yBAA1B;AAAoD,IAAA,OAAO,EAAE,MAAaa,OAAO,CAACC,GAAR,CAAY,MAAZ,CAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,CARF,CAHF,CADF;AA2BD;;AAED,eAAeM,SAAf","sourcesContent":["import React from 'react';\nimport {\n  makeStyles,\n} from '@material-ui/core';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport { UPDATE, USER } from 'queries';\nimport { useMutation } from '@apollo/client';\nimport { User } from 'types';\nimport { UseUserProps } from 'hooks/user';\nimport { useRouter } from 'next/router';\n\nimport InputFied from '../../InputField';\nimport SettingWrapper from '../../SettingWrapper';\nimport UpdateButton from '../../UpdateButton';\n\nconst useStyles = makeStyles((theme) => ({\n  containerInput: {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    minHeight: '100px',\n    height: '100px',\n    maxHeight: '100px',\n    [theme.breakpoints.down('xs')]: {\n      flex: 1,\n      width: '100%',\n      maxHeight: '300px',\n      marginBottom: theme.spacing(1),\n    },\n  },\n  styleForm: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flex: 1,\n    width: '100%',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n    },\n  },\n}));\n\ninterface UpdateUserParams {\n  newUsername?: string;\n  email?: string;\n  description?: string;\n}\n\nconst initialValues: UpdateUserParams = {\n  newUsername: '', email: '', description: '',\n};\n\nconst testSchema = yup.object().shape({\n});\n\nfunction useUpdate({ id }: UseUserProps): (variables: UpdateUserParams) => Promise<void> {\n  const [update] = useMutation<{ update: User }>(UPDATE, {\n    variables: { id },\n    onCompleted: () => {\n      console.log('success');\n    },\n    update: (cache, { data: { update: user } }) => {\n      cache.writeQuery({\n        query: USER,\n        data: { user },\n      });\n    },\n\n  });\n  return (async (variables: UpdateUserParams): Promise<void> => {\n    await update({ variables });\n  });\n}\n\nfunction Biography(): JSX.Element {\n  const classes = useStyles();\n  const router = useRouter();\n  const update = useUpdate(({ id: String(router.query.params) }));\n\n  return (\n    <SettingWrapper\n      title=\"Description :\"\n    >\n      <Formik\n        validationSchema={testSchema}\n        initialValues={initialValues}\n        onSubmit={(values: UpdateUserParams): void => {\n          console.log('description', values);\n          update(values);\n        }}\n      >\n        <div className={classes.containerInput}>\n          <Form className={classes.styleForm}>\n            <InputFied\n              name=\"descritpion\"\n              label=\"Description :\"\n              value=\"Software developer\"\n              rows={4}\n              multiline\n            />\n            <UpdateButton description=\"Update your description\" onClick={(): void => (console.log('save'))} />\n          </Form>\n        </div>\n      </Formik>\n    </SettingWrapper>\n  );\n}\n\nexport default Biography;\n"]},"metadata":{},"sourceType":"module"}