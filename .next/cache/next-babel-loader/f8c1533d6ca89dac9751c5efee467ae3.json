{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/bibo/delivery/EIP/c3pm/platform/components/pages/Settings/Profile/Email/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\n// import { useRouter } from 'next/router';\n// import { useUser } from 'hooks/user';\nimport InputFied from '../../InputField';\nimport SettingWrapper from '../../SettingWrapper';\nimport UpdateButton from '../../UpdateButton';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    containerInput: _defineProperty({\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      alignItems: 'flex-start'\n    }, theme.breakpoints.down('xs'), {\n      flex: 1,\n      width: '100%',\n      marginBottom: theme.spacing(3),\n      marginTop: theme.spacing(3)\n    }),\n    styleForm: _defineProperty({\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      flex: 1,\n      width: '100%'\n    }, theme.breakpoints.down('xs'), {\n      flexDirection: 'column'\n    })\n  };\n});\nvar testSchema = yup.object().shape({\n  email: yup.string().email('Email is invalid').required('Email is required')\n});\n\nfunction Email() {\n  _s();\n\n  var classes = useStyles();\n  return __jsx(SettingWrapper, {\n    title: \"Email :\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, __jsx(Formik, {\n    validationSchema: testSchema,\n    initialValues: {\n      email: ''\n    },\n    onSubmit: function onSubmit(e) {\n      return console.log('username', e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.containerInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(Form, {\n    className: classes.styleForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, __jsx(InputFied, {\n    name: \"email\",\n    label: \"Email :\",\n    value: \"alice.dupont@gmail.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), __jsx(UpdateButton, {\n    description: \"Update your email\",\n    onClick: function onClick() {\n      return console.log('save');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })))));\n}\n\n_s(Email, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Email;\nexport default Email;\n\nvar _c;\n\n$RefreshReg$(_c, \"Email\");","map":{"version":3,"sources":["/Users/bibo/delivery/EIP/c3pm/platform/components/pages/Settings/Profile/Email/index.tsx"],"names":["React","makeStyles","Formik","Form","yup","InputFied","SettingWrapper","UpdateButton","useStyles","theme","containerInput","display","flex","flexDirection","justifyContent","alignItems","breakpoints","down","width","marginBottom","spacing","marginTop","styleForm","testSchema","object","shape","email","string","required","Email","classes","e","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  makeStyles,\n} from '@material-ui/core';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport { UPDATE } from 'queries';\nimport { useMutation } from '@apollo/client';\n// import { useRouter } from 'next/router';\n// import { useUser } from 'hooks/user';\n\nimport InputFied from '../../InputField';\nimport SettingWrapper from '../../SettingWrapper';\nimport UpdateButton from '../../UpdateButton';\nimport { initialValues, UpdateUserParams } from '../utils/UpdateUtils';\n\nconst useStyles = makeStyles((theme) => ({\n  containerInput: {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    [theme.breakpoints.down('xs')]: {\n      flex: 1,\n      width: '100%',\n      marginBottom: theme.spacing(3),\n      marginTop: theme.spacing(3),\n    },\n  },\n  styleForm: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flex: 1,\n    width: '100%',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n    },\n  },\n}));\n\nconst testSchema = yup.object().shape({\n  email: yup.string().email('Email is invalid').required('Email is required'),\n});\n\nfunction Email(): JSX.Element {\n  const classes = useStyles();\n\n  return (\n    <SettingWrapper\n      title=\"Email :\"\n    >\n      <Formik\n        validationSchema={testSchema}\n        initialValues={{ email: '' }}\n        onSubmit={(e): void => (console.log('username', e))}\n      >\n        <div className={classes.containerInput}>\n          <Form className={classes.styleForm}>\n            <InputFied name=\"email\" label=\"Email :\" value=\"alice.dupont@gmail.com\" />\n            <UpdateButton description=\"Update your email\" onClick={(): void => (console.log('save'))} />\n          </Form>\n        </div>\n      </Formik>\n    </SettingWrapper>\n  );\n}\n\nexport default Email;\n"]},"metadata":{},"sourceType":"module"}